{
  "info": {
    "_postman_id": "be46f173-f2ec-47d2-9ad2-efbee4a63eb0",
    "name": "Demo API Testing",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "36748533"
  },
  "item": [
    {
      "name": "REGISTER",
      "item": [
        {
          "name": "INVALID_PAYLOAD",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct errors\", function () {",
                  "    pm.expect(pm.response.json().errors).to.contain.members([",
                  "        \"Email is required\",",
                  "        \"Password is required\",",
                  "        \"Username is required\"",
                  "    ]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"usernae\": \"John Doe\",\n    \"emal\": \"johndoe@test.com\",\n    \"pass\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/register",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "INVALID_USERNAME_FORMAT",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct errors\", function () {",
                  "    pm.expect(pm.response.json().errors).to.eql([",
                  "        \"Username must be at least 3 and max 50 characters\",",
                  "    ]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"jj\",\n    \"email\": \"johndoe@test.com\",\n    \"password\": \"Password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/register",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "INVALID_EMAIL_FORMAT",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct errors\", function () {",
                  "    pm.expect(pm.response.json().errors).to.eql([",
                  "        \"Email is invalid format\"",
                  "    ]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"johndoetest.com\",\n    \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/register",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "INVALID_PASSWORD_FORMAT",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct errors\", function () {",
                  "    pm.expect(pm.response.json().errors).to.contain.members([",
                  "        \"Password must contain at least one digit and one letter\",",
                  "    ]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"johndoe@test.com\",\n    \"password\": \"password\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/register",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "REGISTER_SUCCESS",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct message\", function () {",
                  "    pm.expect(pm.response.json().message).to.eql(\"Account has been registered successfully\");",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"johndoe@test.com\",\n    \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/register",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "USERNAME_ALREADY_EXISTS",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 409\", function () {",
                  "    pm.response.to.have.status(409);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct errors\", function () {",
                  "    pm.expect(pm.response.json().errors).to.eql([",
                  "        \"Username already exists\"",
                  "    ]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"johndoe@test.com\",\n    \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/register",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "EMAIL_ALREADY_EXISTS",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 409\", function () {",
                  "    pm.response.to.have.status(409);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct errors\", function () {",
                  "    pm.expect(pm.response.json().errors).to.eql([",
                  "        \"Email already exists\"",
                  "    ]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"johndoe1\",\n    \"email\": \"johndoe@test.com\",\n    \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/register",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "LOGIN",
      "item": [
        {
          "name": "USER_IS_NOT_REGISTER",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct errors\", function () {",
                  "    pm.expect(pm.response.json().errors).to.eql([",
                  "        \"User with username johndoe1 is not not registered\"",
                  "    ]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"johndoe1\",\n    \"email\": \"johndoe@test.com\",\n    \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/login",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "USERNAME_OR_PASSWORD_WRONG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct message\", function () {",
                  "    pm.expect(pm.response.json().message).to.eql(\"Bad credentials\");",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"johndoe@test.com\",\n    \"password\": \"password3\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/login",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "LOGIN_SUCCESS",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "let jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"JWT_TOKEN\", jsonData.token);",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"johndoe@test.com\",\n    \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/auth/login",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "INTERNAL",
      "item": [
        {
          "name": "GET_INTERNAL_SUCCESS",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct message\", function () {",
                  "    pm.expect(pm.response.json().message).to.eql(\"Accessing protected resource is successful\");",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{JWT_TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/internal",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "internal"
              ]
            }
          },
          "response": []
        },
        {
          "name": "FULL_AUTHENTICATION",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct message\", function () {",
                  "    pm.expect(pm.response.json().message).to.eql(\"Full authentication is required to access this resource\");",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/internal",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "internal"
              ]
            }
          },
          "response": []
        },
        {
          "name": "INVALID_TOKEN",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct message\", function () {",
                  "    pm.expect(pm.response.json().errors).to.eql([\"Invalid JWT token\"]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "jgijgjhfgjhfvgjh",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/internal",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "internal"
              ]
            }
          },
          "response": []
        },
        {
          "name": "EXPIRE_TOKEN_TOKEN",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response body has correct message\", function () {",
                  "    pm.expect(pm.response.json().errors).to.eql([\"JWT token is expired\"]);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwic3ViIjoiam9obmRvZSIsImlhdCI6MTcyMDc5MzQ3NSwiZXhwIjoxNzIwNzkzNTM1fQ.2a1JQKt7y8qZOULLK_XsVJmksTwqXgMCrMyZOGyiMqA",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/internal",
              "host": [
                "{{BASE_URL}}"
              ],
              "path": [
                "internal"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "BASE_URL",
      "value": "http://localhost:8080/api/v1"
    },
    {
      "key": "JWT_TOKEN",
      "value": "secret-token",
      "type": "string"
    }
  ]
}